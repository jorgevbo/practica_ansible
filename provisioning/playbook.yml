---
- hosts: all
  become: true
  tasks:
  - name: Comprobar conexion
    ping:
  - name: Instalar herramientas requeridas
    apt: name={{item}} state=installed
    with_items:
    - unzip
  # PHP
  - name: Agregar repositorio PPA para PHP
    apt_repository: repo='ppa:ondrej/php'
  - name: Actualizar cache de APT
    apt: update_cache=yes cache_valid_time=3600
  - name: Instalar PHP
    apt: name={{item}} state=installed
    with_items:
    - php
    - php-fpm
    - php-mysql
    - php-xml
  - name: Remove Apache2
    apt: name=apache2 state=removed
  # MySQL
  - name: Instalar MYSQL
    apt: name={{item}}
    with_items:
    - mysql-server-5.6
    - python-mysqldb
  - name: Generar nueva contraseña para root de MySQL
    command: openssl rand -hex 7 creates=/root/.my.cnf
    register: mysql_new_root_pass
  - name: Quitar usuario anonimo
    mysql_user: name="" state=absent
    when: mysql_new_root_pass.changed
  - name: Eliminar base de datos de prueba
    mysql_db: name=test state=absent
    when: mysql_new_root_pass.changed
  - name: Mostrar la nueva contraseña del usuario root
    debug: msg="Nueva contraseña de root es {{mysql_new_root_pass.stdout}}"
    when: mysql_new_root_pass.changed
  - name: Actualizar contraseña de usuario root
    mysql_user: name=root host={{item}} password={{mysql_new_root_pass.stdout}}
    with_items:
    - "{{ansible_hostname}}"
    - 127.0.0.1
    - ::1
    - localhost
    when: mysql_new_root_pass.changed
  - name: Crear my.cnf
    template: src=templates/mysql/my.cnf dest=/root/.my.cnf
    when: mysql_new_root_pass.changed
  # NginX
  - name: Instalar NginX
    apt: name=nginx state=installed
  - name: Iniciar NginX
    service: name=nginx state=running
  - name: Crear archivo de configuración de NginX
    template: src=templates/nginx/default dest=/etc/nginx/sites-available/default
    notify: restart nginx
  # Wordpress
  - name: Obtener el checksum de Wordpress
    uri: url=https://wordpress.org/latest.zip.sha1 return_content=true
    register: wp_checksum
  - name: Descargar wordpress
    get_url: url=https://wordpress.org/latest.zip dest=/tmp/wordpress.zip checksum="sha1:{{wp_checksum.content}}"
  - name: unzip Wordpress
    unarchive: src=/tmp/wordpress.zip dest=/tmp copy=no creates=/tmp/wordpress/wp-settings.php
  - name: Crear carpeta del proyecto
    file: dest=/var/www/book.example.com state=directory
  - name: Copiar los archivos de Wordpress
    command: cp -a /tmp/wordpress/. /var/www/book.example.com creates=/var/www/book.example.com/wp-settings.php
  - name: Crear base de datos Wordpress
    mysql_db: name=wordpress state=present
  - name: Crear el usuario de DB para wordpress
    mysql_user: name=wordpress host=localhost password=bananas priv=wordpress.*:ALL
  - name: crear wp-config
    template: src=templates/wordpress/wp-config.php dest=/var/www/book.example.com/wp-config.php
  # Backups de la base de datos
  - name: Existe la base de datos?
    command: mysql -u root wordpress -e "SELECT ID FROM wordpress.wp_users LIMIT 1;"
    register: db_exist
    ignore_errors: true
    changed_when: false
  - name: Copiar la DB Wordpress
    copy: src=files/wp-database.sql dest=/tmp/wp-database.sql
    when: db_exist.rc > 0
  - name: Importar la DB Wordpress
    mysql_db: target=/tmp/wp-database.sql state=import name=wordpress
    when: db_exist.rc > 0

  handlers:
  - name: restart nginx
    service: name=nginx state=restarted
